import sys

input = sys.stdin.readline

if __name__ == '__main__':
    ## 특정범위안의 다수의 소수판별 by 에라토스테네스의 체 알고리즘
    # -> 여러 개의 자연수를 소수판별할 때는
    # (1) 2~N까지 자연수 나열 (2는 최초의 i(소수)가 된다.)
    # (2) 처리되지 않는, 가장 작은 자연수 i(소수)를 찾고,
    # (3) i의 배수를 제거한다(i는 그대로 둔다)
    # (4) 반복( 다음 가장 작은 자연수는 자동으로 소수가 된다)
    #  -> 이 때도, 2~N사이의 모든 수가 아니라 N의 가운데약수(제곱근)까지만 확인하면,
    #     배수들은 알아서 제거되어있다.(곱셈대칭이라 배수...)
    # => 선형에 가까운 O(N lglgN)
    # => 소수여부를 저장해야하므로, 메모리가 많이 필요하다. like 계수정렬렬

    # (1) 2부터 N까지 다수의 소수를 판별하기 위해, True초기화 배열을 만든다(점점 제거해나감)
    N = 1000
    che = [True for _ in range(N + 1)]

    # (2) 나누어떨어지는 여부는 2부터 가운데약수(재곱근)까지만 확인하면 된다.
    # -> 배수로 제거하는 것도 마찬가지로 약수의 성질을 이용한 것이라 동일하다.
    for i in range(2, int(N ** (1 / 2)) + 1):
        # (3) 2(default True)부터, 소수로 남아있는 i의 경우,
        # -> 자신i을 제외하고 2배수부터 N까지의 배수들을 모두 소수탈락시킨다.(소수의 배수들은 소수가 아님)
        if che[i]: # i가 소수로서 남아있다면, 그 소수의 배수들은 다 탈락시킨다.
            # j = 2
            # while i * j <= N:
            #     che[i * j] = False
            #     j += 1
            for j in range(i*2, N + 1, i):
                che[j] = False

    # (4) 소수들만 출력하기
    for i in range(2, N + 1):
        if che[i]:
            print(i, end=' ')
